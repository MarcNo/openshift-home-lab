- hosts: ocp
#  sudo: True
  become: yes
  tasks:

    - name: "Get variables"
      include_vars:
        file: vault.yml     # contains vault_rhn_username and vault_rhn_password

    - name: "Get secrets"
      include_vars:
        file: variables.yml # contains openshift_subscription_pool

    - name: Force unregister before register
      redhat_subscription:
        state: absent
      ignore_errors: true

    - name: "register node with subscription-manager"
      redhat_subscription: state=present username={{ vault_rhn_username }} password={{ vault_rhn_password }} autosubscribe=false
      register: task_result
      until: task_result is succeeded
      retries: 10
      delay: 5

    - name: "attach node to subscription pool"
      command: subscription-manager attach --pool {{ item }}
      register: task_result
      until: task_result.rc == 0
      retries: 10
      delay: 1
      ignore_errors: no
      with_items: '{{openshift_subscription_pool}}'

    - name: "Disable all the enabled RHSM repositories"
      shell: subscription-manager repos --disable="*"

    # - name: "Disable all the enabled yum repositories"
    #   shell: yum-config-manager --disable \*

    - name: "Add repositories for OpenShift 3.11"
      shell: subscription-manager repos --enable="rhel-7-server-rpms" --enable="rhel-7-server-extras-rpms" --enable="rhel-7-server-ose-3.11-rpms" --enable="rhel-7-fast-datapath-rpms" --enable="rhel-7-server-ansible-2.7-rpms"

    - name: "Update the system"
      yum:
        name: '*'
        state: latest

    - name: "Install required packages"
      yum: name={{ item }} state=present
      with_items:
       - wget 
       - git 
       - net-tools 
       - bind-utils 
       - iptables-services 
       - bridge-utils 
       - bash-completion 
       - kexec-tools
       - sos
       - psacct
       - yum-utils
       - openshift-ansible
       - docker


#     - name: Reboot the server
#       shell: sleep 2 && shutdown -r now "Ansible package updates triggered"
#       async: 1
#       poll: 0
#       ignore_errors: true
  
#     - name: Wait for server to shutdown
#       local_action: shell ssh -o BatchMode=yes -o ConnectTimeout=2 -o StrictHostKeyChecking=no "root@{{ inventory_hostname }}" true
#       register: result
#       until: result.rc != 0
#       failed_when: result.rc == -1
#       retries: 200
#       delay: 1

#     - name: Wait for server to be ready
#       local_action: shell ssh -o BatchMode=yes -o ConnectTimeout=2 -o StrictHostKeyChecking=no "root@{{ inventory_hostname }}" true
#       register: result
#       until: result.rc == 0
#       retries: 200
#       delay: 3
  
#       - name:
#         shell: uptime

# # https://blog.dustinrue.com/2017/12/reboot-and-wait-using-ansible/

#    - name: "Nice to have extra packages"
#      yum: name={{ item }} state=present
#      with_items:
#       - emacs-nox 

    - name: "Ansible and scripts to drive the openshift installation"
      yum: name={{ item }} state=present
      with_items:
       - openshift-ansible
       - ansible

    # - name: "Install Docker"
    #   yum:
    #     name: docker-1.13.1
    #     state: present

    # - name: "Configure Docker Storage"
    #   blockinfile: dest=/etc/sysconfig/docker-storage-setup
    #                content="DEVS=/dev/vdb
    #                VG=docker-vg"

    # - name: "Execute Docker Storage Setup"
    #   shell:  docker-storage-setup;   


    # - name: "Enable Docker Service"
    #   shell:  systemctl enable docker;   

    # - name: "Start Docker Service"
    #   shell:  systemctl start docker;

    # - name: "install atomic packages"
    #   yum: name={{ item }} state=present
    #   with_items:
    #    - atomic

